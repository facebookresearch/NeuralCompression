name: Build and Test

# trigger on any PR or push to main
# also allow manual triggering
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade wheel
          python setup.py bdist_wheel
          pip install dist/*.whl
      - name: Test Import
        run: |
          python -c 'import neuralcompression'

  lint-and-test:
    name: Lint and Test
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build setuptools wheel
          pip install --editable ".[tests]"
      - name: Check Formatting and Lint
        run: |
          python --version
          black --version
          black neuralcompression tests projects --check
          mypy --version
          mypy neuralcompression
          flake8 --version
          flake8 neuralcompression tests
          isort --version
          isort --check-only neuralcompression tests projects
      - name: Install NeuralCompression
        run: |
          python -m build .
          pip install dist/*.whl
      - name: Run pytest
        run: |
          echo -e "PyTorch \c" && pip show torch | grep Version
          pytest tests
